/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./defined-b9ff0e39","./Check-e6691f86","./freezeObject-2d5b18ce","./defaultValue-199f5aa8","./Math-2145e044","./Cartesian2-40ed5530","./defineProperties-ae15c9d5","./Transforms-94513c2d","./RuntimeError-d5522ee3","./WebGLConstants-554ddbe2","./ComponentDatatype-9477db2c","./GeometryAttribute-4754007e","./when-c208a7cf","./GeometryAttributes-c3465b51","./AttributeCompression-a7396e6f","./GeometryPipeline-bd87b3b1","./EncodedCartesian3-e7615897","./IndexDatatype-668aa2f9","./IntersectionTests-f6d27a39","./Plane-297770b0","./VertexFormat-61bc2255","./GeometryInstance-02cd2d29","./arrayRemoveDuplicates-32bbc2e4","./BoundingRectangle-1f97a102","./EllipsoidTangentPlane-1ba7ce65","./OrientedBoundingBox-d258fabd","./CoplanarPolygonGeometryLibrary-081c9c70","./ArcType-c72d871a","./EllipsoidRhumbLine-d5ed1c3f","./PolygonPipeline-eaa2424e","./PolygonGeometryLibrary-4d2d35e1"],function(l,p,e,c,_,R,t,I,a,n,M,H,r,O,o,w,i,B,s,y,d,A,F,u,m,g,G,b,f,z,L){"use strict";var S=new R.Cartesian3,E=new u.BoundingRectangle,N=new R.Cartesian2,j=new R.Cartesian2,k=new R.Cartesian3,T=new R.Cartesian3,D=new R.Cartesian3,V=new R.Cartesian3,Q=new R.Cartesian3,U=new R.Cartesian3,Y=new I.Quaternion,q=new I.Matrix3,J=new I.Matrix3,W=new R.Cartesian3;function Z(e,t,a,n,r,o,i,s){var l=e.positions,p=z.PolygonPipeline.triangulate(e.positions2D,e.holes);p.length<3&&(p=[0,1,2]);var c=B.IndexDatatype.createTypedArray(l.length,p.length);c.set(p);var y=q;if(0!==n){var d=I.Quaternion.fromAxisAngle(o,n,Y);if(y=I.Matrix3.fromQuaternion(d,y),t.tangent||t.bitangent){d=I.Quaternion.fromAxisAngle(o,-n,Y);var u=I.Matrix3.fromQuaternion(d,J);i=R.Cartesian3.normalize(I.Matrix3.multiplyByVector(u,i,i),i),t.bitangent&&(s=R.Cartesian3.normalize(R.Cartesian3.cross(o,i,s),s))}}else y=I.Matrix3.clone(I.Matrix3.IDENTITY,y);var m=j;t.st&&(m.x=a.x,m.y=a.y);for(var g=l.length,b=3*g,f=new Float64Array(b),h=t.normal?new Float32Array(b):void 0,v=t.tangent?new Float32Array(b):void 0,C=t.bitangent?new Float32Array(b):void 0,x=t.st?new Float32Array(2*g):void 0,P=0,w=0,A=0,F=0,G=0,L=0;L<g;L++){var E=l[L];if(f[P++]=E.x,f[P++]=E.y,f[P++]=E.z,t.st){var k=r(I.Matrix3.multiplyByVector(y,E,S),N);R.Cartesian2.subtract(k,m,k);var T=_.CesiumMath.clamp(k.x/a.width,0,1),D=_.CesiumMath.clamp(k.y/a.height,0,1);x[G++]=T,x[G++]=D}t.normal&&(h[w++]=o.x,h[w++]=o.y,h[w++]=o.z),t.tangent&&(v[F++]=i.x,v[F++]=i.y,v[F++]=i.z),t.bitangent&&(C[A++]=s.x,C[A++]=s.y,C[A++]=s.z)}var V=new O.GeometryAttributes;return t.position&&(V.position=new H.GeometryAttribute({componentDatatype:M.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:f})),t.normal&&(V.normal=new H.GeometryAttribute({componentDatatype:M.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:h})),t.tangent&&(V.tangent=new H.GeometryAttribute({componentDatatype:M.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:v})),t.bitangent&&(V.bitangent=new H.GeometryAttribute({componentDatatype:M.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:C})),t.st&&(V.st=new H.GeometryAttribute({componentDatatype:M.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:x})),new H.Geometry({attributes:V,indices:c,primitiveType:H.PrimitiveType.TRIANGLES})}function h(e){var t=(e=c.defaultValue(e,c.defaultValue.EMPTY_OBJECT)).polygonHierarchy;p.Check.defined("options.polygonHierarchy",t);var a=c.defaultValue(e.vertexFormat,d.VertexFormat.DEFAULT);this._vertexFormat=d.VertexFormat.clone(a),this._polygonHierarchy=t,this._stRotation=c.defaultValue(e.stRotation,0),this._ellipsoid=R.Ellipsoid.clone(c.defaultValue(e.ellipsoid,R.Ellipsoid.WGS84)),this._workerName="createCoplanarPolygonGeometry",this.packedLength=L.PolygonGeometryLibrary.computeHierarchyPackedLength(t)+d.VertexFormat.packedLength+R.Ellipsoid.packedLength+2}h.fromPositions=function(e){return e=c.defaultValue(e,c.defaultValue.EMPTY_OBJECT),p.Check.defined("options.positions",e.positions),new h({polygonHierarchy:{positions:e.positions},vertexFormat:e.vertexFormat,stRotation:e.stRotation,ellipsoid:e.ellipsoid})},h.pack=function(e,t,a){return p.Check.typeOf.object("value",e),p.Check.defined("array",t),a=c.defaultValue(a,0),a=L.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,a),R.Ellipsoid.pack(e._ellipsoid,t,a),a+=R.Ellipsoid.packedLength,d.VertexFormat.pack(e._vertexFormat,t,a),a+=d.VertexFormat.packedLength,t[a++]=e._stRotation,t[a]=e.packedLength,t};var v=R.Ellipsoid.clone(R.Ellipsoid.UNIT_SPHERE),C=new d.VertexFormat,x={polygonHierarchy:{}};return h.unpack=function(e,t,a){p.Check.defined("array",e),t=c.defaultValue(t,0);var n=L.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=n.startingIndex,delete n.startingIndex;var r=R.Ellipsoid.unpack(e,t,v);t+=R.Ellipsoid.packedLength;var o=d.VertexFormat.unpack(e,t,C);t+=d.VertexFormat.packedLength;var i=e[t++],s=e[t];return l.defined(a)||(a=new h(x)),a._polygonHierarchy=n,a._ellipsoid=R.Ellipsoid.clone(r,a._ellipsoid),a._vertexFormat=d.VertexFormat.clone(o,a._vertexFormat),a._stRotation=i,a.packedLength=s,a},h.createGeometry=function(e){var t=e._vertexFormat,a=e._polygonHierarchy,n=e._stRotation,r=a.positions;if(!((r=F.arrayRemoveDuplicates(r,R.Cartesian3.equalsEpsilon,!0)).length<3)){var o=k,i=T,s=D,l=Q,p=U;if(G.CoplanarPolygonGeometryLibrary.computeProjectTo2DArguments(r,V,l,p)){if(o=R.Cartesian3.cross(l,p,o),o=R.Cartesian3.normalize(o,o),!R.Cartesian3.equalsEpsilon(V,R.Cartesian3.ZERO,_.CesiumMath.EPSILON6)){var c=e._ellipsoid.geodeticSurfaceNormal(V,W);R.Cartesian3.dot(o,c)<0&&(o=R.Cartesian3.negate(o,o),l=R.Cartesian3.negate(l,l))}var y=G.CoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction(V,l,p),d=G.CoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction(V,l,p);t.tangent&&(i=R.Cartesian3.clone(l,i)),t.bitangent&&(s=R.Cartesian3.clone(p,s));var u=L.PolygonGeometryLibrary.polygonsFromHierarchy(a,y,!1),m=u.hierarchy,g=u.polygons;if(0!==m.length){r=m[0].outerRing;for(var b=I.BoundingSphere.fromPoints(r),f=L.PolygonGeometryLibrary.computeBoundingRectangle(o,d,r,n,E),h=[],v=0;v<g.length;v++){var C=new A.GeometryInstance({geometry:Z(g[v],t,f,n,d,o,i,s)});h.push(C)}var x=w.GeometryPipeline.combineInstances(h)[0];x.attributes.position.values=new Float64Array(x.attributes.position.values),x.indices=B.IndexDatatype.createTypedArray(x.attributes.position.values.length/3,x.indices);var P=x.attributes;return t.position||delete P.position,new H.Geometry({attributes:P,indices:x.indices,primitiveType:x.primitiveType,boundingSphere:b})}}}},function(e,t){return l.defined(t)&&(e=h.unpack(e,t)),h.createGeometry(e)}});
