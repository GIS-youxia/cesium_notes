/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./defined-b9ff0e39","./Check-e6691f86","./freezeObject-2d5b18ce","./defaultValue-199f5aa8","./Math-2145e044","./Cartesian2-40ed5530","./defineProperties-ae15c9d5","./Transforms-94513c2d","./RuntimeError-d5522ee3","./WebGLConstants-554ddbe2","./ComponentDatatype-9477db2c","./GeometryAttribute-4754007e","./when-c208a7cf","./GeometryAttributes-c3465b51","./IndexDatatype-668aa2f9","./IntersectionTests-f6d27a39","./Plane-297770b0","./EllipsoidTangentPlane-1ba7ce65","./EllipsoidRhumbLine-d5ed1c3f","./PolygonPipeline-eaa2424e","./EllipsoidGeodesic-b257688e","./PolylinePipeline-5ad419cb","./WallGeometryLibrary-c3ece839"],function(k,m,e,p,D,x,i,G,t,r,L,T,n,V,I,a,o,s,l,d,u,f,S){"use strict";var q=new x.Cartesian3,O=new x.Cartesian3;function h(e){var i=(e=p.defaultValue(e,p.defaultValue.EMPTY_OBJECT)).positions,t=e.maximumHeights,r=e.minimumHeights;if(!k.defined(i))throw new m.DeveloperError("options.positions is required.");if(k.defined(t)&&t.length!==i.length)throw new m.DeveloperError("options.positions and options.maximumHeights must have the same length.");if(k.defined(r)&&r.length!==i.length)throw new m.DeveloperError("options.positions and options.minimumHeights must have the same length.");var n=p.defaultValue(e.granularity,D.CesiumMath.RADIANS_PER_DEGREE),a=p.defaultValue(e.ellipsoid,x.Ellipsoid.WGS84);this._positions=i,this._minimumHeights=r,this._maximumHeights=t,this._granularity=n,this._ellipsoid=x.Ellipsoid.clone(a),this._workerName="createWallOutlineGeometry";var o=1+i.length*x.Cartesian3.packedLength+2;k.defined(r)&&(o+=r.length),k.defined(t)&&(o+=t.length),this.packedLength=o+x.Ellipsoid.packedLength+1}h.pack=function(e,i,t){if(!k.defined(e))throw new m.DeveloperError("value is required");if(!k.defined(i))throw new m.DeveloperError("array is required");var r;t=p.defaultValue(t,0);var n=e._positions,a=n.length;for(i[t++]=a,r=0;r<a;++r,t+=x.Cartesian3.packedLength)x.Cartesian3.pack(n[r],i,t);var o=e._minimumHeights;if(a=k.defined(o)?o.length:0,i[t++]=a,k.defined(o))for(r=0;r<a;++r)i[t++]=o[r];var s=e._maximumHeights;if(a=k.defined(s)?s.length:0,i[t++]=a,k.defined(s))for(r=0;r<a;++r)i[t++]=s[r];return x.Ellipsoid.pack(e._ellipsoid,i,t),i[t+=x.Ellipsoid.packedLength]=e._granularity,i};var g=x.Ellipsoid.clone(x.Ellipsoid.UNIT_SPHERE),c={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:g,granularity:void 0};return h.unpack=function(e,i,t){if(!k.defined(e))throw new m.DeveloperError("array is required");var r;i=p.defaultValue(i,0);var n,a,o=e[i++],s=new Array(o);for(r=0;r<o;++r,i+=x.Cartesian3.packedLength)s[r]=x.Cartesian3.unpack(e,i);if(0<(o=e[i++]))for(n=new Array(o),r=0;r<o;++r)n[r]=e[i++];if(0<(o=e[i++]))for(a=new Array(o),r=0;r<o;++r)a[r]=e[i++];var l=x.Ellipsoid.unpack(e,i,g),d=e[i+=x.Ellipsoid.packedLength];return k.defined(t)?(t._positions=s,t._minimumHeights=n,t._maximumHeights=a,t._ellipsoid=x.Ellipsoid.clone(l,t._ellipsoid),t._granularity=d,t):(c.positions=s,c.minimumHeights=n,c.maximumHeights=a,c.granularity=d,new h(c))},h.fromConstantHeights=function(e){var i,t,r=(e=p.defaultValue(e,p.defaultValue.EMPTY_OBJECT)).positions;if(!k.defined(r))throw new m.DeveloperError("options.positions is required.");var n=e.minimumHeight,a=e.maximumHeight,o=k.defined(n),s=k.defined(a);if(o||s){var l=r.length;i=o?new Array(l):void 0,t=s?new Array(l):void 0;for(var d=0;d<l;++d)o&&(i[d]=n),s&&(t[d]=a)}return new h({positions:r,maximumHeights:t,minimumHeights:i,ellipsoid:e.ellipsoid})},h.createGeometry=function(e){var i=e._positions,t=e._minimumHeights,r=e._maximumHeights,n=e._granularity,a=e._ellipsoid,o=S.WallGeometryLibrary.computePositions(a,i,r,t,n,!1);if(k.defined(o)){var s,l=o.bottomPositions,d=o.topPositions,m=d.length,p=2*m,u=new Float64Array(p),f=0;for(m/=3,s=0;s<m;++s){var h=3*s,g=x.Cartesian3.fromArray(d,h,q),c=x.Cartesian3.fromArray(l,h,O);u[f++]=c.x,u[f++]=c.y,u[f++]=c.z,u[f++]=g.x,u[f++]=g.y,u[f++]=g.z}var y=new V.GeometryAttributes({position:new T.GeometryAttribute({componentDatatype:L.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:u})}),v=p/3;p=2*v-4+v;var E=I.IndexDatatype.createTypedArray(v,p),w=0;for(s=0;s<v-2;s+=2){var _=s,b=s+2,C=x.Cartesian3.fromArray(u,3*_,q),H=x.Cartesian3.fromArray(u,3*b,O);if(!x.Cartesian3.equalsEpsilon(C,H,D.CesiumMath.EPSILON10)){var A=s+1,P=s+3;E[w++]=A,E[w++]=_,E[w++]=A,E[w++]=P,E[w++]=_,E[w++]=b}}return E[w++]=v-2,E[w++]=v-1,new T.Geometry({attributes:y,indices:E,primitiveType:T.PrimitiveType.LINES,boundingSphere:new G.BoundingSphere.fromVertices(u)})}},function(e,i){return k.defined(i)&&(e=h.unpack(e,i)),e._ellipsoid=x.Ellipsoid.clone(e._ellipsoid),h.createGeometry(e)}});
