/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./defined-b9ff0e39","./Check-e6691f86","./freezeObject-2d5b18ce","./defaultValue-199f5aa8","./Math-2145e044","./Cartesian2-40ed5530","./defineProperties-ae15c9d5","./Transforms-94513c2d","./RuntimeError-d5522ee3","./WebGLConstants-554ddbe2","./ComponentDatatype-9477db2c","./GeometryAttribute-4754007e","./when-c208a7cf","./GeometryAttributes-c3465b51","./AttributeCompression-a7396e6f","./GeometryPipeline-bd87b3b1","./EncodedCartesian3-e7615897","./IndexDatatype-668aa2f9","./IntersectionTests-f6d27a39","./Plane-297770b0","./GeometryOffsetAttribute-5aa2ee88","./GeometryInstance-02cd2d29","./arrayRemoveDuplicates-32bbc2e4","./EllipsoidTangentPlane-1ba7ce65","./ArcType-c72d871a","./EllipsoidRhumbLine-d5ed1c3f","./PolygonPipeline-eaa2424e","./PolygonGeometryLibrary-4d2d35e1"],function(v,c,e,f,E,h,t,A,i,r,G,_,o,T,n,H,a,L,l,s,C,O,y,D,I,p,w,x){"use strict";var k=[],S=[];function R(e,t,i,r,o){var n,a,l=D.EllipsoidTangentPlane.fromPoints(t,e).projectPointsOntoPlane(t,k);w.PolygonPipeline.computeWindingOrder2D(l)===w.WindingOrder.CLOCKWISE&&(l.reverse(),t=t.slice().reverse());var s=t.length,y=0;if(r)for(n=new Float64Array(2*s*3),a=0;a<s;a++){var p=t[a],d=t[(a+1)%s];n[y++]=p.x,n[y++]=p.y,n[y++]=p.z,n[y++]=d.x,n[y++]=d.y,n[y++]=d.z}else{var u=0;if(o===I.ArcType.GEODESIC)for(a=0;a<s;a++)u+=x.PolygonGeometryLibrary.subdivideLineCount(t[a],t[(a+1)%s],i);else if(o===I.ArcType.RHUMB)for(a=0;a<s;a++)u+=x.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[a],t[(a+1)%s],i);for(n=new Float64Array(3*u),a=0;a<s;a++){var c;o===I.ArcType.GEODESIC?c=x.PolygonGeometryLibrary.subdivideLine(t[a],t[(a+1)%s],i,S):o===I.ArcType.RHUMB&&(c=x.PolygonGeometryLibrary.subdivideRhumbLine(e,t[a],t[(a+1)%s],i,S));for(var f=c.length,h=0;h<f;++h)n[y++]=c[h]}}var g=2*(s=n.length/3),m=L.IndexDatatype.createTypedArray(s,g);for(a=y=0;a<s-1;a++)m[y++]=a,m[y++]=a+1;return m[y++]=s-1,m[y++]=0,new O.GeometryInstance({geometry:new _.Geometry({attributes:new T.GeometryAttributes({position:new _.GeometryAttribute({componentDatatype:G.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})}),indices:m,primitiveType:_.PrimitiveType.LINES})})}function M(e,t,i,r,o){var n,a,l=D.EllipsoidTangentPlane.fromPoints(t,e).projectPointsOntoPlane(t,k);w.PolygonPipeline.computeWindingOrder2D(l)===w.WindingOrder.CLOCKWISE&&(l.reverse(),t=t.slice().reverse());var s=t.length,y=new Array(s),p=0;if(r)for(n=new Float64Array(2*s*3*2),a=0;a<s;++a){y[a]=p/3;var d=t[a],u=t[(a+1)%s];n[p++]=d.x,n[p++]=d.y,n[p++]=d.z,n[p++]=u.x,n[p++]=u.y,n[p++]=u.z}else{var c=0;if(o===I.ArcType.GEODESIC)for(a=0;a<s;a++)c+=x.PolygonGeometryLibrary.subdivideLineCount(t[a],t[(a+1)%s],i);else if(o===I.ArcType.RHUMB)for(a=0;a<s;a++)c+=x.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[a],t[(a+1)%s],i);for(n=new Float64Array(3*c*2),a=0;a<s;++a){var f;y[a]=p/3,o===I.ArcType.GEODESIC?f=x.PolygonGeometryLibrary.subdivideLine(t[a],t[(a+1)%s],i,S):o===I.ArcType.RHUMB&&(f=x.PolygonGeometryLibrary.subdivideRhumbLine(e,t[a],t[(a+1)%s],i,S));for(var h=f.length,g=0;g<h;++g)n[p++]=f[g]}}s=n.length/6;var m=y.length,b=2*(2*s+m),P=L.IndexDatatype.createTypedArray(s+m,b);for(a=p=0;a<s;++a)P[p++]=a,P[p++]=(a+1)%s,P[p++]=a+s,P[p++]=(a+1)%s+s;for(a=0;a<m;a++){var v=y[a];P[p++]=v,P[p++]=v+s}return new O.GeometryInstance({geometry:new _.Geometry({attributes:new T.GeometryAttributes({position:new _.GeometryAttribute({componentDatatype:G.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})}),indices:P,primitiveType:_.PrimitiveType.LINES})})}function g(e){if(c.Check.typeOf.object("options",e),c.Check.typeOf.object("options.polygonHierarchy",e.polygonHierarchy),e.perPositionHeight&&v.defined(e.height))throw new c.DeveloperError("Cannot use both options.perPositionHeight and options.height");if(v.defined(e.arcType)&&e.arcType!==I.ArcType.GEODESIC&&e.arcType!==I.ArcType.RHUMB)throw new c.DeveloperError("Invalid arcType. Valid options are ArcType.GEODESIC and ArcType.RHUMB.");var t=e.polygonHierarchy,i=f.defaultValue(e.ellipsoid,h.Ellipsoid.WGS84),r=f.defaultValue(e.granularity,E.CesiumMath.RADIANS_PER_DEGREE),o=f.defaultValue(e.perPositionHeight,!1),n=o&&v.defined(e.extrudedHeight),a=f.defaultValue(e.arcType,I.ArcType.GEODESIC),l=f.defaultValue(e.height,0),s=f.defaultValue(e.extrudedHeight,l);if(!n){var y=Math.max(l,s);s=Math.min(l,s),l=y}this._ellipsoid=h.Ellipsoid.clone(i),this._granularity=r,this._height=l,this._extrudedHeight=s,this._arcType=a,this._polygonHierarchy=t,this._perPositionHeight=o,this._perPositionHeightExtrude=n,this._offsetAttribute=e.offsetAttribute,this._workerName="createPolygonOutlineGeometry",this.packedLength=x.PolygonGeometryLibrary.computeHierarchyPackedLength(t)+h.Ellipsoid.packedLength+8}g.pack=function(e,t,i){return c.Check.typeOf.object("value",e),c.Check.defined("array",t),i=f.defaultValue(i,0),i=x.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,i),h.Ellipsoid.pack(e._ellipsoid,t,i),i+=h.Ellipsoid.packedLength,t[i++]=e._height,t[i++]=e._extrudedHeight,t[i++]=e._granularity,t[i++]=e._perPositionHeightExtrude?1:0,t[i++]=e._perPositionHeight?1:0,t[i++]=e._arcType,t[i++]=f.defaultValue(e._offsetAttribute,-1),t[i]=e.packedLength,t};var m=h.Ellipsoid.clone(h.Ellipsoid.UNIT_SPHERE),b={polygonHierarchy:{}};return g.unpack=function(e,t,i){c.Check.defined("array",e),t=f.defaultValue(t,0);var r=x.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=r.startingIndex,delete r.startingIndex;var o=h.Ellipsoid.unpack(e,t,m);t+=h.Ellipsoid.packedLength;var n=e[t++],a=e[t++],l=e[t++],s=1===e[t++],y=1===e[t++],p=e[t++],d=e[t++],u=e[t];return v.defined(i)||(i=new g(b)),i._polygonHierarchy=r,i._ellipsoid=h.Ellipsoid.clone(o,i._ellipsoid),i._height=n,i._extrudedHeight=a,i._granularity=l,i._perPositionHeight=y,i._perPositionHeightExtrude=s,i._arcType=p,i._offsetAttribute=-1===d?void 0:d,i.packedLength=u,i},g.fromPositions=function(e){return e=f.defaultValue(e,f.defaultValue.EMPTY_OBJECT),c.Check.defined("options.positions",e.positions),new g({polygonHierarchy:{positions:e.positions},height:e.height,extrudedHeight:e.extrudedHeight,ellipsoid:e.ellipsoid,granularity:e.granularity,perPositionHeight:e.perPositionHeight,arcType:e.arcType,offsetAttribute:e.offsetAttribute})},g.createGeometry=function(e){var t=e._ellipsoid,i=e._granularity,r=e._polygonHierarchy,o=e._perPositionHeight,n=e._arcType,a=x.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(r,!o,t);if(0!==a.length){var l,s,y,p=[],d=E.CesiumMath.chordLength(i,t.maximumRadius),u=e._height,c=e._extrudedHeight;if(e._perPositionHeightExtrude||!E.CesiumMath.equalsEpsilon(u,c,0,E.CesiumMath.EPSILON2))for(y=0;y<a.length;y++){if((l=M(t,a[y],d,o,n)).geometry=x.PolygonGeometryLibrary.scaleToGeodeticHeightExtruded(l.geometry,u,c,t,o),v.defined(e._offsetAttribute)){var f=l.geometry.attributes.position.values.length/3,h=new Uint8Array(f);h=e._offsetAttribute===C.GeometryOffsetAttribute.TOP?C.arrayFill(h,1,0,f/2):(s=e._offsetAttribute===C.GeometryOffsetAttribute.NONE?0:1,C.arrayFill(h,s)),l.geometry.attributes.applyOffset=new _.GeometryAttribute({componentDatatype:G.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:h})}p.push(l)}else for(y=0;y<a.length;y++){if((l=R(t,a[y],d,o,n)).geometry.attributes.position.values=w.PolygonPipeline.scaleToGeodeticHeight(l.geometry.attributes.position.values,u,t,!o),v.defined(e._offsetAttribute)){var g=l.geometry.attributes.position.values.length,m=new Uint8Array(g/3);s=e._offsetAttribute===C.GeometryOffsetAttribute.NONE?0:1,C.arrayFill(m,s),l.geometry.attributes.applyOffset=new _.GeometryAttribute({componentDatatype:G.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:m})}p.push(l)}var b=H.GeometryPipeline.combineInstances(p)[0],P=A.BoundingSphere.fromVertices(b.attributes.position.values);return new _.Geometry({attributes:b.attributes,indices:b.indices,primitiveType:b.primitiveType,boundingSphere:P,offsetAttribute:e._offsetAttribute})}},function(e,t){return v.defined(t)&&(e=g.unpack(e,t)),e._ellipsoid=h.Ellipsoid.clone(e._ellipsoid),g.createGeometry(e)}});
